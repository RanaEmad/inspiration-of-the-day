{"version":3,"sources":["components/Images/Images.js","pages/Home/Home.js","pages/SingleImage/SingleImage.js","pages/RateLimitExceeded/RateLimitExceeded.js","pages/Photographer/Photographer.js","App.js","serviceWorker.js","index.js"],"names":["Images","className","this","props","images","map","data","key","id","to","alt","description","src","urls","small","React","Component","Home","state","redirect","fetch","headers","Authorization","process","then","response","get","setState","json","catch","error","console","SingleImage","image","match","params","user","full","username","name","RateLimitExceeded","Photographer","log","bio","location","href","portfolio_url","App","basename","path","component","exact","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.bc76120b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Images.css\";\nimport { Link } from \"react-router-dom\";\n\nclass Images extends React.Component {\n  render() {\n    return (\n      <div className=\"images\">\n        {this.props.images.map((data) => (\n         <Link key={data.id} to={\"/single-image/\"+data.id} className=\"image\" > <img alt={data.description} src={data.urls.small} /></Link>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Images;\n","import React from \"react\";\nimport \"./Home.css\";\nimport Images from \"../../components/Images/Images\";\nimport { Redirect } from \"react-router-dom\";\nclass Home extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      images: [],\n      redirect: false,\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://api.unsplash.com/photos/random?count=12\", {\n      headers: {\n        Authorization: `Client-ID ${process.env.REACT_APP_API_KEY}`,\n      },\n    })\n      .then((response) => {\n        if (response.headers.get(\"X-Ratelimit-Remaining\") < 1) {\n          this.setState({ redirect: true });\n        }\n        return response.json();\n      })\n      .then((data) => {\n        if (!this.state.redirect) {\n          this.setState({\n            images: data,\n          });\n        }\n      })\n      .catch((error) => console.error(error));\n  }\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to=\"/rate-limit-exceeded\" />;\n    }\n\n    return (\n      <div className=\"home\">\n        <h1 className=\"header\">Inspiration Of The Day</h1>\n        <Images images={this.state.images} />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport \"./SingleImage.css\";\nimport { Link } from \"react-router-dom\";\n\nclass SingleImage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      image: {},\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://api.unsplash.com/photos/\" + this.props.match.params.id, {\n      headers: {\n        Authorization: `Client-ID ${process.env.REACT_APP_API_KEY}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({\n          image: data,\n        });\n      })\n      .catch((error) => console.error(error));\n  }\n  render() {\n    if (this.state.image.user && this.state.image.urls) {\n      return (\n        <div className=\"single-image\">\n          <figure>\n            <img\n              alt={this.state.image.description}\n              src={this.state.image.urls.full}\n            />\n            <figcaption>\n              Photographed By{\" \"}\n              <span className=\"image-photographer\">\n                <Link to={\"/photographer/\" + this.state.image.user.username}>\n                  {this.state.image.user.name}\n                </Link>\n              </span>\n            </figcaption>\n          </figure>\n        </div>\n      );\n    }\n    return \"\";\n  }\n}\n\nexport default SingleImage;\n","import React from \"react\";\nimport \"./RateLimitExceeded.css\";\n\nclass RateLimitExceeded extends React.Component {\n  render() {\n    return (\n      <div className=\"rate-limit-exceeded\">\n        The API Rate Limit Was Exceeded. Please, Try Again Later\n      </div>\n    );\n  }\n}\n\nexport default RateLimitExceeded;\n","import React from \"react\";\nimport \"./Photographer.css\";\nimport Images from \"../../components/Images/Images\";\n\nclass Photographer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {},\n      images: [],\n    };\n  }\n  componentDidMount() {\n    fetch(\n      \"https://api.unsplash.com/users/\" + this.props.match.params.username,\n      {\n        headers: {\n          Authorization: `Client-ID ${process.env.REACT_APP_API_KEY}`,\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        this.setState({\n          user: data,\n        });\n      })\n      .catch((error) => console.error(error));\n\n    fetch(\n      \"https://api.unsplash.com/users/\" +\n        this.props.match.params.username +\n        \"/photos?order_by=latest\",\n      {\n        headers: {\n          Authorization: `Client-ID ${process.env.REACT_APP_API_KEY}`,\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        this.setState({\n          images: data,\n        });\n      })\n      .catch((error) => console.error(error));\n  }\n  render() {\n    return (\n      <div className=\"photographer\">\n        <div className=\"info\">\n          <h1 className=\"header\">{this.state.user.name}</h1>\n          <div className=\"info-block\">\n            <p className=\"header\">Bio</p>\n            <p>{this.state.user.bio}</p>\n          </div>\n          <div className=\"info-block\">\n            <p className=\"header\">Location</p>\n            <p>{this.state.user.location}</p>\n          </div>\n          <div className=\"info-block\">\n            <p className=\"header\">Portfolio</p>\n            <p><a href={this.state.user.portfolio_url}>{this.state.user.portfolio_url}</a></p>\n          </div>\n        </div>\n        <div className=\"photographer-images\">\n          <h1 className=\"header\"> Latest Work</h1>\n          <Images images={this.state.images} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Photographer;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home/Home\";\nimport SingleImage from \"./pages/SingleImage/SingleImage\";\nimport RateLimitExceeded from \"./pages/RateLimitExceeded/RateLimitExceeded\";\nimport Photographer from \"./pages/Photographer/Photographer\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <div className=\"app\">\n          <Switch>\n            <Route path=\"/single-image/:id\" component={SingleImage} />\n            <Route path=\"/photographer/:username\" component={Photographer} />\n            <Route path=\"/rate-limit-exceeded\" exact component={RateLimitExceeded} />\n            <Route path=\"/\" exact component={Home} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}